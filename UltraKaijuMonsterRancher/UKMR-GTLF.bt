//------------------------------------------------
//--- 010 Editor v13.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
local int offset = 0;
local int i;
typedef struct(int modulo){
    while(((FTell() - offset) % modulo) != 0){
        byte align<hidden=true>;
    };
}Align;

typedef struct{
    int streamSize;
    byte compData[streamSize]<bgcolor=0x330033>;
    Align align(128)<hidden=true>;
}File;

typedef struct{
    offset = FTell();
    uint flags; //unknown
    uint fileNum;
    uint decompTotal; //total size for decompressed files, likely for an output array to be generated
    uint compSizes[fileNum];
    Align align(128)<hidden=true>;
    for(i=0;i<fileNum;i++){
        File file<optimize=false>;
    };
}GzFile;

typedef struct{
    uint offset;
    uint size;
    uint hash;
}GzInfo;

uint magic;
uint unkn;
uint num;
uint unkn;
GzInfo gz[num];
local int j;
for(j=0;j<num;j++){
    FSeek(gz[j].offset);
    GzFile file;
};
