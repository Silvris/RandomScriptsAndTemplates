//------------------------------------------------
//--- 010 Editor v13.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
local int min = 9000;
local int max = -1;
local int i;
typedef struct{
    byte unkn; //I think this is a datatype, since it's only ever 1 on floats
    int data;
}Int5;

string ReadInt5(Int5 &i){
    string s;
    SPrintf(s, "%i", i.data);
    return s;
}

typedef struct{
    Int5 Name<read=ReadInt5>;
    Int5 Description<read=ReadInt5>;
    Int5 Rank<read=ReadInt5>;
    Int5 Month<read=ReadInt5>;
    Int5 Week<read=ReadInt5>;
    Int5 Unkn4<read=ReadInt5>;
    Int5 Unkn5<read=ReadInt5>;
    Int5 TournamentType<read=ReadInt5>;//0 - RR, 1 - SingleElim, 2 - Team Battle, 3 - Single Battle
    Int5 Unkn7<read=ReadInt5>;
    Int5 ParticipantNum<read=ReadInt5>;
    Int5 Unkn9<read=ReadInt5>;//time?
    Int5 Unkn10<read=ReadInt5>;//location
    Int5 Unkn11<read=ReadInt5>;//fame?
    Int5 RewardFirst<read=ReadInt5>;
    Int5 RewardRepeat<read=ReadInt5>;
    Int5 PrizeMoney<read=ReadInt5>;
    Int5 Unkn15<read=ReadInt5>;
    Int5 Unkn16<read=ReadInt5>;
    Int5 Unkn17<read=ReadInt5>;
    Int5 MinimumAge<read=ReadInt5>;
    Int5 MaximumAge<read=ReadInt5>;
    Int5 Unkn20<read=ReadInt5>;//player slot?
    Int5 Opponent1<read=ReadInt5>;
    Int5 Opponent2<read=ReadInt5>;
    Int5 Opponent3<read=ReadInt5>;
    Int5 Opponent4<read=ReadInt5>;
    Int5 Opponent5<read=ReadInt5>;
    Int5 Opponent6<read=ReadInt5>;
    Int5 Opponent7<read=ReadInt5>;
    Int5 Opponent8<read=ReadInt5>;
    Int5 Opponent9<read=ReadInt5>;
    Int5 Opponent10<read=ReadInt5>;
    Int5 Opponent11<read=ReadInt5>;
    Int5 Opponent12<read=ReadInt5>;
    Int5 Rival1<read=ReadInt5>;//rival breeder?
    Int5 Rival2<read=ReadInt5>;//rival monster?
    Int5 Unkn35<read=ReadInt5>;
    Int5 Unkn36<read=ReadInt5>;
    Int5 Unkn37<read=ReadInt5>;
    if(Unkn17.data < min && Unkn17.data != -1) min = Unkn17.data;
    if(Unkn17.data > max) max = Unkn17.data;
    if(Unkn17.data == 0) Printf("%i\n", FTell());
}DataStruct;

int dataNum;

DataStruct data[dataNum]<optimize=false>;

Printf("Min:%i Max:%i",min,max);